01_객체지향 프로그램밍이란?

1) 추상화
    - 설계하는 작업 자체
    - 프로퍼티와 메서드의 이름을 작성하는 선언 부분만 만들뿐 소스를 구현하지 않는다.

2) 캡슐화
    - 어떤 프러퍼티와 메서드는 외부에서 접근 가능하고 또 어떤 프로퍼티와 메서드는 외부에서 접근하지 못하게 하는 작업

3) 상송
    - 특정 클래스(부모클래스)의 속성과 메서드를 하위(자식) 클래스가 물려받는 것을 의미

4) 다형성
    - 객체지향 프로그래밍의 핵심
    - 선언부분과 구현 부분을 나눠 다양하게 처리가능


03_객체지향 프로그래밍 언어에서 제공하는 기본 기능

1) 기본 기능 종류
    - 클래스, 인터페이스, 추상클래스

2) 선언 부분과 구현 부분
    - 선언 부분 : 메서드이름, 매개변수는 몇개 등 메서드 정보가 바로 선언 부분
    - 구현 부분 : 메서드의 기능을 직접 구현한 코드
    - 선언 부분과 구현 부분으로 나눠 구현하는 이유 : 다형성 때문
        부분      클래스     인터페이스       추상클래스
      선언 부분      x           o                 o
      구현 부분      o           x                 o

3) 클래스
    - 선언 부분과 구현 부분으로 클래스를 설명을 하면은 객체의 실제 동작을 처리하는 구현 부분을 맡게 된다.
    - 조합 : 클래스+인터페이스, 클래스+추상클래스, 클래스+추상클래스+인터페이스
    - 선언 부분은 인터페이스와 추상클래스 문법을 이용해 만들고 이들의 구현 부분은 바로 클래스가 담당
    - 왜 나눠서 코딩을 할까? 객체지향 프로그래밍의 핵심인 다형성 때문

4) 인터페이스
    1_주 용도
        - 주용도는 구현 부분 없이 오직 선언 부분만을 만들때 사용 하는 문법
        - 객체가 반드시 구현해야 할 메서드 명세서를 만들 때 주로 사용
        - 이렇게 만들어진 인터페이스는 클래스와 연결하여 사용
        - 인터페이스와 연결한 클래스는 반드시 인터페이스에 명시된 대로 메서드를 만들어 실제 동작하는 구현 부분을 작성
    2_생김새
        - p236 ~ 237 참고

    3_자바스크립트 지원 유무
        - 문법 지원안함
        - 인터페이스가 있다고 가정하에 코딩을 함
5) 추상 클래스
    1_주 용도
        - 상속에 대해서 선행학습필요
        - 상속을 사용하다 보면 부모클래스의 기능 중 특정 기능을 부모 클래스에서 구현하는 게 아니라 자식클래스에게 구현하도록 강요해야 하는 경우 발생 이때 사용하는 문법이 추상 클래스
        - 자식클래스에게 구현을 강요하고 싶은 기능을 부모 클래스의 추상 메서드로 만들어 준다. 추상 메서드는 클래스 내에 선언 부분만 있는 메서드를 말한다.
        - 추상 클래스를 상속받는 자식 클래스는 추상 클래스에 선언되어 추상 메서드의 구현 코드를 반드시 작성 해야한다. 구현안하면 에러
        - 정리하면 추상 클래스는 일반 클래스 기능과 인터페이스 기능을 합한 형태
    2_생김새
        - p240 ~ 241 참고
    3_자바스크립트 지원 유무
        - 문법 지원안함
        - 인터페이스가 있다고 가정하에 코딩을 함

6) UML 소개
    1_UML 이란?
        - 특별한 의미가 있는 모형을 활용해 객체지향 분석 및 설계에 사용하는 모델링 언어
        - 가장 기본적인 단위로 클래스와 인터페이스 그리고 추상클래스를 비주얼적으로 모델링
